name: CI/CD Pipeline with Blue-Green Deployment

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: flask-app
  BLUE_PORT: 5001
  GREEN_PORT: 5002

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v3

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üê≥ Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:latest

      - name: ‚öôÔ∏è SSH & Deploy to EC2 (Blue-Green)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:latest

            active_port=$(curl -s http://localhost | grep -oE '5001|5002')
            if [ "$active_port" == "5001" ]; then
              next_color="green"
              next_port=${{ env.GREEN_PORT }}
            else
              next_color="blue"
              next_port=${{ env.BLUE_PORT }}
            fi

            docker stop flask-$next_color || true
            docker rm flask-$next_color || true

            docker run -d -p $next_port:5000 -p 8000:8000 --name flask-$next_color ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:latest

            sudo sed -i "s/5001\|5002/$next_port/" /etc/nginx/sites-available/default
            sudo systemctl reload nginx
